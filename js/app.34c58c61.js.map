{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/geometry.js","webpack:///./src/scripts/world.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","inBounds","shape","width","height","points","every","point","pointInBounds","rectangle","x1","y1","rotation","x2","Math","cos","y2","sin","x3","y3","WIDTH","HEIGHT","randomRect","rect","random","PI","intersectsAny","otherEntities","some","otherEntity","shape1","shape2","polygonPolygon","flat","randomDig","previousDigs","entityType","randomBuilding","previousBuildings","World","buildingCount","digCount","digs","buildings","this","total","makeWorld","CANVAS_WIDTH","CANVAS_HEIGHT","worldToCanvas","drawEntity","ctx","entity","fillStyle","startPoint","beginPath","moveTo","canvasPoint","lineTo","closePath","fill","addEventListener","world","canvas","document","getElementById","structuresSeenOutput","regenerateFromInputs","getContext","clearRect","drawWorld","buildingCountInput","digCountInput","innerText","structuresSeen","simulationCountInput","simulationCount","margin","svg","d3","html","append","attr","x","domain","range","bins","thresholds","ticks","histogram","y","selectAll","enter","x0","style","runSimulation"],"mappings":"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","file":"js/app.34c58c61.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([339,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\n\nfunction intersectRects(shape1, shape2) {\n    return (shape1.x < shape2.x + shape2.width) &&\n        (shape1.y < shape2.y + shape2.width) &&\n        (shape2.x < shape1.x + shape1.width) &&\n        (shape2.y < shape1.x + shape1.width);\n}\n\nimport { polygonPolygon } from 'intersects';\n\n\nfunction intersects(shape1, shape2) {\n    return polygonPolygon(shape1.points.flat(), shape2.points.flat());\n}\n\nfunction pointInBounds(point, width, height) {\n    return point[0] >= 0 && \n           point[0] <= width &&\n           point[1] >= 0 &&\n           point[1] <= width;\n}\n\nfunction inBounds(shape, width, height) {\n    return shape.points.every(p => pointInBounds(p, width, height));\n}\n\nfunction rectangle(x1, y1, width, height, rotation=0) {\n\n    let x2 = x1 + width * Math.cos(rotation);\n    let y2 = y1 + width * Math.sin(rotation);\n    let x3 = x2 - height * Math.sin(rotation);\n    let y3 = y2 + height * Math.cos(rotation);\n    let x4 = x3 - width * Math.cos(rotation);\n    let y4 = y3 - width * Math.sin(rotation);\n\n    return {\n        points: [\n            [x1, y1],\n            [x2, y2],\n            [x3, y3],\n            [x4, y4],\n        ]\n    };\n}\n\nexport {\n    intersects,\n    rectangle,\n    inBounds,\n};","import {rectangle, inBounds, intersects} from './geometry';\nimport { tsConstructorType } from '@babel/types';\n\nconst WIDTH=100;\nconst HEIGHT=100;\n\nfunction randomRect(width, height) {\n    let rect;\n    do {\n        // For now we will choose x and y uniformly from within the world,\n        // set rotation, and then see if that is in bounds, and repeat\n        let rotation = Math.random() * 2 * Math.PI;\n        let x = Math.random() * WIDTH;\n        let y = Math.random() * HEIGHT;\n        rect = rectangle(x, y, width, height, rotation);\n    } while (!inBounds(rect, WIDTH, HEIGHT));\n    return rect;\n}\n\nfunction intersectsAny(shape, otherEntities) {\n    return otherEntities.some(otherEntity => \n        intersects(shape, otherEntity.shape)\n    );\n}\n\nfunction randomDig(previousDigs) {\n    let shape;\n    do {\n        shape = randomRect(4, 4);\n    } while (intersectsAny(shape, previousDigs));\n    return {\n        entityType: \"dig\",\n        shape,\n    };\n}\n\nfunction randomBuilding(previousBuildings) {\n    let shape;\n    do {\n        shape = randomRect(4, 4);\n    } while (intersectsAny(shape, previousBuildings));\n    return {\n        entityType: \"building\",\n        shape,\n    };\n}\n\nclass World {\n    constructor(buildingCount, digCount) {\n        let digs = [];\n        for (let i=0; i<digCount; i++) {\n            digs.push(randomDig(digs));\n        }\n\n        let buildings = [];\n        for (let i=0; i<buildingCount; i++) {\n            buildings.push(randomBuilding(buildings));\n        }\n        this.digs = digs;\n        this.buildings = buildings;\n        this.width = WIDTH;\n        this.height = HEIGHT;\n    }\n\n    structuresSeen() {\n        let total = 0;\n        for (let building of this.buildings) {\n            if (intersectsAny(building.shape, this.digs)) {\n                total += 1;\n            }\n        }\n        return total;\n    }\n}\n\nfunction makeWorld(buildingCount, digCount) {\n    return new World(buildingCount, digCount);\n}\n\nexport {\n    makeWorld,\n    HEIGHT,\n    WIDTH,\n};","import '../styles/index.scss';\nimport { makeWorld, HEIGHT, WIDTH } from './world';\nimport * as d3 from \"d3\";\n\nlet shapes = [];\nlet digs = [];\n\nconst CANVAS_WIDTH = 600;\nconst CANVAS_HEIGHT = 600;\n\nfunction generateShapes() {\n    let shapes = [];\n}\n\nfunction draw() {\n    let canvas = document.getElementById(\"canvas\");\n    var ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"#FF0000\";\n    ctx.fillRect(0, 0, 20, 10);\n}\n\nfunction worldToCanvas(p) {\n    return [\n        p[0] / HEIGHT * CANVAS_HEIGHT,\n        p[1] / WIDTH * CANVAS_WIDTH,\n    ];\n}\n\nfunction drawEntity(ctx, entity) {\n    if (entity.entityType == 'dig') {\n        ctx.fillStyle = \"#FF0000\";\n    } else {\n        ctx.fillStyle = \"#0000FF\";\n    }\n    let startPoint = worldToCanvas(entity.shape.points[0]);\n    ctx.beginPath();\n\n    ctx.moveTo(startPoint[0], startPoint[1]);\n    for (let i=1; i<entity.shape.points.length; i++) {\n        let canvasPoint = worldToCanvas(entity.shape.points[i]);\n        ctx.lineTo(canvasPoint[0], canvasPoint[1]);\n    }\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawWorld(world, canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    for (let building of world.buildings) {\n        drawEntity(ctx, building);\n    }\n\n    for (let dig of world.digs) {\n        drawEntity(ctx, dig);\n    }\n}\n\nfunction runSimulation(buildingCount, digCount, simulationCount) {\n    let data = [];\n    for (let i=0; i<simulationCount; i++) {\n        let world = makeWorld(buildingCount, digCount);\n        data.push({\n            structuresSeen: world.structuresSeen()\n        });\n    }\n    // set the dimensions and margins of the graph\n    var margin = {top: 10, right: 30, bottom: 30, left: 40},\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#histogram\")\n        .html(\"\")\n        .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // X axis: scale and draw:\n    var x = d3.scaleLinear()\n        .domain([0, 10])     // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n        .range([0, width]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // set the parameters for the histogram\n    var histogram = d3.histogram()\n        .value(function(d) { return d.structuresSeen; })   // I need to give the vector of value\n        .domain(x.domain())  // then the domain of the graphic\n        .thresholds(x.ticks(10)); // then the numbers of bins\n\n    // And apply this function to data to get the bins\n    var bins = histogram(data);\n\n    // Y axis: scale and draw:\n    var y = d3.scaleLinear()\n        .range([height, 0]);\n    y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n    svg.append(\"g\")\n        .call(d3.axisLeft(y));\n\n    // append the bar rectangles to the svg element\n    svg.selectAll(\"rect\")\n        .data(bins)\n        .enter()\n        .append(\"rect\")\n            .attr(\"x\", 1)\n            .attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n            .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n            .attr(\"height\", function(d) { return height - y(d.length); })\n            .style(\"fill\", \"#69b3a2\");\n\n}\n\nfunction init() {\n    let world;\n    let canvas = document.getElementById(\"canvas\");\n    let structuresSeenOutput = document.getElementById(\"structures-seen-output\");\n\n    function regenerateFromInputs() {\n        world = makeWorld(buildingCountInput.value, digCountInput.value);\n        drawWorld(world, canvas);\n        structuresSeenOutput.innerText = world.structuresSeen();\n    }\n\n    let buildingCountInput = document.getElementById(\"building-count-input\");\n    buildingCountInput.value = 10;\n    buildingCountInput.addEventListener(\"change\", regenerateFromInputs);\n    let digCountInput = document.getElementById(\"dig-count-input\");\n    digCountInput.value = 5;\n    digCountInput.addEventListener(\"change\", regenerateFromInputs);\n    let simulationCountInput = document.getElementById(\"simulation-count-input\");\n    let regenerateButton = document.getElementById(\"regenerate-button\");\n    regenerateButton.addEventListener(\"click\", regenerateFromInputs);\n    let simulateButton = document.getElementById(\"simulate-button\");\n    simulateButton.addEventListener(\"click\", () => {\n        runSimulation(buildingCountInput.value, digCountInput.value, simulationCountInput.value);\n    });\n}\n\nwindow.addEventListener(\"load\", init);"],"sourceRoot":""}